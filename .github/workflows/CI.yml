name: Java CI with Gradle

on:
  push:
    branches-ignore:
      - main

jobs:
  build:
    name: Continuous Integration
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'testDB'
          mysql user: 'test'
          mysql password: 'testPW'

      - name: Create application.properties
        run: |
          cat <<EOT > ./src/main/resources/application.properties
          spring.application.name=WithU
          
          spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
          spring.jpa.database=mysql
          spring.jpa.show-sql=true
          spring.jpa.properties.hibernate.format_sql=true
          commit.hash=local
          api.server.url=http://localhost:8080
          
          # S3
          cloud.aws.credentials.accessKey=${{ secrets.AWS_ACCESS_KEY_ID }}
          cloud.aws.credentials.secretKey=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cloud.aws.s3.bucket=${{ secrets.AWS_BUCKET_NAME }}
          cloud.aws.s3.bucket-path=${{ secrets.AWS_BUCKET_PATH }}

          EOT
        shell: bash

      - name: Generate test-application.properties
        run: |
          cat <<EOT > ./src/test/resources/application.properties
          cloud.aws.credentials.accessKey=${{ secrets.AWS_ACCESS_KEY_ID }}
          cloud.aws.credentials.secretKey=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cloud.aws.s3.bucket=${{ secrets.AWS_BUCKET_NAME }}
          cloud.aws.s3.bucket-path=${{ secrets.AWS_BUCKET_PATH }}
          EOT
        shell: bash

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v 3.1.0

      - name: Get short SHA
        id: slug
        run: echo "sha7=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run Spotless Apply
        run: ./gradlew spotlessApply

      - name: Build with Gradle Wrapper
        run: ./gradlew build
